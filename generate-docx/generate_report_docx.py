import argparse
import warnings

print("Generating QC report...")

# Suppress all warnings
warnings.filterwarnings("ignore")

#读取参数
parser = argparse.ArgumentParser(description='Generating report.')
#-> required arguments
parser.add_argument('-i', type=str, dest='basic_info', required=True, help='path to basic info')
parser.add_argument('-d', type=str, dest='dir_figs', required=True, help='path to figures')
parser.add_argument('-p', type=str, dest='prefix', required=True, help='preifix string')
parser.add_argument('-o', type=str, dest='outFile', required=True, help='outputfile name')
args = parser.parse_args()

# bcheckFileName = args.bcheckFileName
# bcheckFileChrName =args.bcheckFileChrName

#所有的参数
# lib_name="SRR11589404_800k.fq"
# dir_figs="./figs"
# prefix=dir_figs+"/"+lib_name
# suffix=".png"
# basic_info="./test_data/SRR11589404_800k.fq/SRR11589404_800k.fq.basic_statistics.txt"

lib_name=args.prefix
dir_figs=args.dir_figs
prefix=dir_figs+"/"+lib_name
suffix=".png"
basic_info=args.basic_info
oF=args.outFile


#test
from docx import Document
from docx.shared import Inches
from docx.shared import Pt
from docx.shared import RGBColor
from docx.enum.style import WD_STYLE_TYPE
from docx.enum.text import WD_PARAGRAPH_ALIGNMENT

document = Document()

def read_basic_info(file_name):
    # 打开文件
    with open(file_name, 'r') as file:
        # 读取文件内容
        lines = file.readlines()

    # 初始化一个空列表，用于存储元组
    data_tuples = []

    # 从第二行开始遍历每一行
    for line in lines[1:]:
        # 切分每一行的内容，以制表符为分隔符
        columns = line.strip().split('\t')
        
        # 将每一行的内容转换为元组，并添加到列表中
        data_tuple = tuple(columns)
        data_tuples.append(data_tuple)

    # 将所有元组存储到一个大元组中
    all_data = tuple(data_tuples)

    # 打印结果
    # print(all_data)

    return all_data

def generate_three_line_table(document, records):
    table = document.add_table(rows=1, cols=2)

    # Set table alignment
    table.alignment = WD_PARAGRAPH_ALIGNMENT.CENTER

    # Add table header
    hdr_cells = table.rows[0].cells
    hdr_cells[0].text = 'Metrics'
    hdr_cells[1].text = 'Values'

    # Add records
    for metric, value in records:
        row_cells = table.add_row().cells
        row_cells[0].text = metric
        row_cells[1].text = value

    # Style the table with three lines
    for i, row in enumerate(table.rows):
        for cell in row.cells:
            cell.paragraphs[0].alignment = WD_PARAGRAPH_ALIGNMENT.CENTER


#设置caption的style
styles = document.styles
style = styles.add_style('My_Caption', WD_STYLE_TYPE.PARAGRAPH)
style.base_style = styles['Caption']
font = style.font
font.size = Pt(11)
font.color.rgb  = RGBColor.from_string("767171") #deep grey


document.add_heading('Data quality report generated by PPL', 0)

p = document.add_paragraph('This is a plain statistics report about')
p.add_run(' Pore-C library quality').bold = True
p.add_run(' based on the results from')
p.add_run(' PPL data processing pipeline.').bold = True



document.add_heading('1. Basic statistical information', level=1)
records = read_basic_info ( basic_info )
generate_three_line_table(document, records)

# table = document.add_table(rows=1, cols=2)
# hdr_cells = table.rows[0].cells
# hdr_cells[0].text = 'Metrics'
# hdr_cells[1].text = 'Values'
# for metric,value in records:
#     row_cells = table.add_row().cells
#     row_cells[0].text = metric
#     row_cells[1].text = value

#2 限制酶消化质量判断 + reads
document.add_heading('2. Restriction Digestion quality', level=1)
document.add_heading('2.1 Length distribution comparision between real fragment and virtual fragments', level=2)
p = document.add_paragraph('Please note: The more consistent the length real fragment is with the virtual, the more sufficient restriction enzyme digestion is represented.')
document.add_picture(prefix+".f1"+suffix, width=Inches(4))
document.add_paragraph('Figure 1. Length distribution of real and virtual fragments.', style="My_Caption")
document.add_picture(prefix+".f2"+suffix, width=Inches(4))
document.add_paragraph('Figure 2. Cumulative distribution of real and virtual fragments length. The 1/4, 1/2, and 3/4 quantile lines are represented by blue, green, and red colors, respectively with length number.', style="My_Caption")

document.add_heading('3. Reads length and distribution of contact fragments', level=1)
document.add_heading('3.1 Distribution comparision between reads length and virtual fragments length', level=2)
p = document.add_paragraph('Please note: The longer reads are compared to fragments, the more fragments are contained in one read. For human sample, N50 from 3000 to 6000 is a proper metric for Pore-C experiment')
document.add_picture(prefix+".r1"+suffix, width=Inches(4))
document.add_paragraph('Figure 3. Length distribution of reads and fragments.', style="My_Caption")
document.add_picture(prefix+".r2"+suffix, width=Inches(4))
document.add_paragraph('Figure 4. Cumulative distribution of fragments and reads length. The 1/4, 1/2, and 3/4 quantile lines are represented by blue, green, and red colors, respectively with length number.', style="My_Caption")
document.add_heading('3.2 Distribution of fragment number of multi-way contacts', level=2)
document.add_picture(prefix+".d1"+suffix, width=Inches(4))
document.add_paragraph('Figure 5. Distribution of fragment number of multi-way contacts. All contacts are grouped by fragment number.', style="My_Caption")
document.add_picture(prefix+".d2"+suffix, width=Inches(4))
document.add_paragraph('Figure 6. Distribution of fragment number of multi-way contacts.', style="My_Caption")

#邻近链接质量的判断
document.add_heading('4. Proximity Ligation quality', level=1)
p = document.add_paragraph('Please note: The quality of proximity ligation is evaluated by the proportion of three types of VPCs (virtual pairwise contacts) by genomic distance. In Hi-C process pipeline, one metric of high-quality datasets is the proportion inter-chromosomes contacts less than 60% and the proportion of the long-range intra-chromosomes contacts more than 40%.'
                           +' The inter VPCs usually be generated from very high order contacts, which probably be created by noisies, such as random ligation issues. You can use FilterHyper fuction to filter these contacts in PPL.jar')
document.add_picture(prefix+".ii1"+suffix, width=Inches(6))
document.add_paragraph('Figure 7. Distribution of VPCs by genomics distance.', style="My_Caption")
document.add_picture(prefix+".ii2"+suffix, width=Inches(6))
document.add_paragraph('Figure 8. Distribution of VPCs by genomics distance. Real counts are shown.', style="My_Caption")

document.add_heading('5. Mapping quality', level=1)
p = document.add_paragraph('Please note: The mapping quality by three strategies: mapping quality score, boundary check, normalized penalty.')
document.add_heading('5.1 Mapping quality score check.', level=2)
p = document.add_paragraph('Please note: This score was generated by aligner. minimap2 is recommended.')
document.add_picture(prefix+".mpq"+suffix, width=Inches(4))
document.add_paragraph('Figure 9. Distribution of mapping quality score.', style="My_Caption")
document.add_heading('5.2 Mapping boundaries check.', level=2)
p = document.add_paragraph('Please note: BoundaryCheck is a PPL function to evaluate the rightness of mapping by to check the mapping position and virtual restriction sites.')
document.add_picture(prefix+".bc1"+suffix, width=Inches(4))
document.add_paragraph('Figure 10. Distance between mapping boundaries and identified sites. Right side usually have extra several-bases distance because of the strategy of virtual digestion.', style="My_Caption")
document.add_picture(prefix+".bc2"+suffix, width=Inches(6))
document.add_paragraph('Figure 11. Distance between mapping boundaries and identified sites by chromoses. Two average distances were computed on all chromosomes using two strategies. In strategy 1 (both), we compute the average value of both sides of one read. In strategy 2 (closer), we only take the sides closer to identified site compared to another. ', style="My_Caption")
document.add_heading('5.3 Mapping set penalty check.', level=2)
p = document.add_paragraph('Please note: In PPL mapping step, three penalties were calculated to get all right mapping records. Here, they were normalized by being divided by reads length. Overaly penalty is the symbol of the overlap region between mappings. Gap penalty is ratio sum of unmapped regions length to the sum length of all reads. The indel/mismatch is edit count, which means the similarity between reads and references.')
document.add_picture(prefix+".p1"+suffix, width=Inches(5))
document.add_paragraph('Figure 12. Normalised penalty score.', style="My_Caption")
document.add_picture(prefix+".p2"+suffix, width=Inches(4))
document.add_paragraph('Figure 13. Normalised penalty score. Same to Fig 12, just presented by violin plot.', style="My_Caption")
document.add_heading('6. Pore clogging check', level=1)
p = document.add_paragraph('Please note: The ratio of CLOSER distance to BOTH distance is used to evaluate pore-clogging. Because BOTH distance is influenced by clogging, but CLOSER is not. Therefore, the lower ratio, the better quality.')
document.add_picture(prefix+".bc3"+suffix, width=Inches(4))
document.add_paragraph('Figure 14. Distribuion of boundary distance ratio. ', style="My_Caption")


document.add_heading('', level=1)
document.add_paragraph('Code Accessibility: https://github.com/versarchey/PPL', style='Intense Quote')
document.add_paragraph('Powered by python-docx', style='Intense Quote')



####

document.save(oF)
